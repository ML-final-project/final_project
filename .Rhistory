select(-geometry)
aod_047 <- read_csv(make_path(config$data_path$aod,
"2010ImputedOpticalDepth_047nm.csv"),
col_names = FALSE) %>%
rename(date = X1,
aod47 = X2)
aod_055 <- read_csv(make_path(config$data_path$aod,
"2010ImputedOpticalDepth_055nm.csv"),
col_names = FALSE) %>%
rename(date = X1,
aod55 = X2)
merged_aod <- left_join(aod_047, aod_055, by = "date") %>%
right_join(., merged, by = "date")
View(merged_aod)
reg_vars <- merged_aod %>%
select(elevation, contains("normal"), aod47, aod55) %>%
names() %>%
paste(collapse = " + ")
summary(plm(as.formula(paste0("daily_mean_pm_2_5_concentration ~ ", reg_vars)),
data = merged_aod,
index = c("date"),
model = "within",
effect = "twoways"))
install.packages("corrplot")
library(corrplot)
setwd("~/Documents/GitHub/final_project")
setwd("~/Documents/GitHub/final_project")
#setwd("~/final_project/")
make_path <- is_git_root$make_fix_file()
config <- yaml.load_file(make_path("analysis/config.yml"))
out_path <- make_path(config$build_path)
data_out <- make_path(config$data_path$merge)
corr_tab <- read_csv(make_path(config$data_path,
"pm25_site_correlation.csv"))
View(corr_tab)
corr_tab <- read.csv("/data/pm25_site_correlation.csv")
setwd("~/Documents/GitHub/final_project")
corr_tab <- read.csv("data/pm25_site_correlation.csv")
View(corr_tab)
corrplot(corr_tab, method="color")
#test
M<-cor(mtcars)
corrplot(corr, method="circle")
corrplot(M, method="circle")
corrplot(M, method="color")
View(M)
View(corr_tab)
type(M)
M.type
dtype(M)
str(M)
str(corr_tab)
rm(list())
rm(list=ls())
setwd("~/Documents/GitHub/final_project")
make_path <- is_git_root$make_fix_file()
config <- yaml.load_file(make_path("analysis/config.yml"))
out_path <- make_path(config$build_path)
data_out <- make_path(config$data_path$merge)
noaa <- read_csv(make_path(config$data_path$noaa,
"Chicago2010Daily.csv")) %>%
set_names(to_snake_case(colnames(.))) %>%
select(station_name,
date,
elevation,
latitude,
longitude,
contains("normal")) %>%
na_if(-9999)
pm25 <- read_csv(make_path(config$data_path$pm25,
"pm25_chicago_2010.csv")) %>%
set_names(to_snake_case(colnames(.))) %>%
mutate(date = mdy(date)) %>%
st_as_sf(coords = c("site_longitude", "site_latitude"),
crs = 4326, remove = FALSE) %>%
st_transform("+proj=utm +zone=42N +datum=WGS84 +units=km")
View(config)
library(dbplyr)
noaa %>%
missing_plot()
?missing_plot()
install.packages("finalfit")
library(finalfit)
noaa %>%
missing_plot()
pm25 %>%
missing_plot()
View(pm25)
pm25 <- read_csv(make_path(config$data_path$pm25,
"pm25_chicago_2010.csv")) %>%
set_names(to_snake_case(colnames(.))) %>%
mutate(date = mdy(date)) %>%
st_as_sf(coords = c("site_longitude", "site_latitude"),
crs = 4326, remove = FALSE) %>%
st_transform("+proj=utm +zone=42N +datum=WGS84 +units=km") %>%
select(date, site_name, daily_mean_pm_2_5_concentration)
pm25 %>%
missing_plot()
pm25 <- read_csv(make_path(config$data_path$pm25,
"pm25_chicago_2010.csv")) %>%
set_names(to_snake_case(colnames(.))) %>%
mutate(date = mdy(date)) %>%
st_as_sf(coords = c("site_longitude", "site_latitude"),
crs = 4326, remove = FALSE) %>%
st_transform("+proj=utm +zone=42N +datum=WGS84 +units=km") %>%
na.omit() %>%
select(date, site_name, daily_mean_pm_2_5_concentration)
noaa$missing = ifelse(noaa$dly_tmin_normal = NA, 1, 0)
is.na(noaa$dly_tmin_normal)
noaa$missing_tmin = ifelse(is.na(noaa$dly_tmin_normal), 1, 0)
View(noaa)
t.test(noaa$missing_tmin)
denver <- read.csv("~Desktop/denver.csv")
setwd("~/Desktop")
denver <- read.csv("~denver.csv")
denver <- read.csv("Denver.csv")
denver%>%
missing_plot()
noaa %>%
missing_plot()
denver%>%
missing_plot()
y <- noaa[which(sapply(noaa, sd) > 0)]
x <- as.data.frame(abs(is.na(noaa)))
y <- x[which(sapply(x, sd) > 0)]
cor(y)
missingness <- cor(y)
#https://stats.stackexchange.com/questions/172316/a-statistical-approach-to-determine-if-data-are-missing-at-random
corrplot(missingness, method="color")
pm25 <- read_csv(make_path(config$data_path$pm25,
"pm25_chicago_2010.csv")) %>%
set_names(to_snake_case(colnames(.))) %>%
mutate(date = mdy(date)) %>%
st_as_sf(coords = c("site_longitude", "site_latitude"),
crs = 4326, remove = FALSE) %>%
st_transform("+proj=utm +zone=42N +datum=WGS84 +units=km") %>%
select(date, site_name, daily_mean_pm_2_5_concentration)
View(pm25)
min(pm25$daily_mean_pm_2_5_concentration)
pm25a <- read_csv(make_path(config$data_path$pm25,
"pm25_Anchorage_county_2010")) %>%
set_names(to_snake_case(colnames(.))) %>%
mutate(date = mdy(date)) %>%
st_as_sf(coords = c("site_longitude", "site_latitude"),
crs = 4326, remove = FALSE) %>%
st_transform("+proj=utm +zone=42N +datum=WGS84 +units=km") %>%
select(date, site_name, daily_mean_pm_2_5_concentration)
make_path <- is_git_root$make_fix_file()
setwd("~/Documents/GitHub/final_project")
make_path <- is_git_root$make_fix_file()
config <- yaml.load_file(make_path("analysis/config.yml"))
out_path <- make_path(config$build_path)
data_out <- make_path(config$data_path$merge)
pm25c <- read_csv(make_path(config$data_path$pm25,
"pm25_chicago_2010.csv")) %>%
set_names(to_snake_case(colnames(.))) %>%
mutate(date = mdy(date)) %>%
st_as_sf(coords = c("site_longitude", "site_latitude"),
crs = 4326, remove = FALSE) %>%
st_transform("+proj=utm +zone=42N +datum=WGS84 +units=km") %>%
select(date, site_name, daily_mean_pm_2_5_concentration)
pm25a <- read_csv(make_path(config$data_path$pm25,
"pm25_Anchorage_county_2010.csv")) %>%
set_names(to_snake_case(colnames(.))) %>%
mutate(date = mdy(date)) %>%
st_as_sf(coords = c("site_longitude", "site_latitude"),
crs = 4326, remove = FALSE) %>%
st_transform("+proj=utm +zone=42N +datum=WGS84 +units=km") %>%
select(date, site_name, daily_mean_pm_2_5_concentration)
min(pm25a$daily_mean_pm_2_5_concentration)
unique(pm25a$daily_mean_pm_2_5_concentration)
pm25a <- read_csv(make_path(config$data_path$pm25,
"pm25_Denver_2010.csv")) %>%
set_names(to_snake_case(colnames(.))) %>%
mutate(date = mdy(date)) %>%
st_as_sf(coords = c("site_longitude", "site_latitude"),
crs = 4326, remove = FALSE) %>%
st_transform("+proj=utm +zone=42N +datum=WGS84 +units=km") %>%
select(date, site_name, daily_mean_pm_2_5_concentration)
min(pm25a$daily_mean_pm_2_5_concentration)
pm25a <- read_csv(make_path(config$data_path$pm25,
"pm25_Hillsborough_2010.csv")) %>%
set_names(to_snake_case(colnames(.))) %>%
mutate(date = mdy(date)) %>%
st_as_sf(coords = c("site_longitude", "site_latitude"),
crs = 4326, remove = FALSE) %>%
st_transform("+proj=utm +zone=42N +datum=WGS84 +units=km") %>%
select(date, site_name, daily_mean_pm_2_5_concentration)
min(pm25a$daily_mean_pm_2_5_concentration)
pm25a <- read_csv(make_path(config$data_path$pm25,
"pm25_Los-Angeles_2010.csv")) %>%
set_names(to_snake_case(colnames(.))) %>%
mutate(date = mdy(date)) %>%
st_as_sf(coords = c("site_longitude", "site_latitude"),
crs = 4326, remove = FALSE) %>%
st_transform("+proj=utm +zone=42N +datum=WGS84 +units=km") %>%
select(date, site_name, daily_mean_pm_2_5_concentration)
min(pm25a$daily_mean_pm_2_5_concentration)
pm25a <- read_csv(make_path(config$data_path$pm25,
"pm25_Tampa_2010.csv")) %>%
set_names(to_snake_case(colnames(.))) %>%
mutate(date = mdy(date)) %>%
st_as_sf(coords = c("site_longitude", "site_latitude"),
crs = 4326, remove = FALSE) %>%
st_transform("+proj=utm +zone=42N +datum=WGS84 +units=km") %>%
select(date, site_name, daily_mean_pm_2_5_concentration)
min(pm25a$daily_mean_pm_2_5_concentration)
noaa <- read_csv(make_path(config$data_path$noaa,
"Mass2010Normal.csv")) %>%
set_names(to_snake_case(colnames(.))) %>%
select(station_name,
date,
elevation,
latitude,
longitude,
contains("normal")) %>%
na_if(-9999) %>%
na.omit() %>%
mutate(date = ymd(date)) %>%
mutate(state = case_when(str_detect(station_name, "CA") ~ "CA",
str_detect(station_name, "IL") ~ "IL",
str_detect(station_name, "AK") ~ "AK",
str_detect(station_name, "CO") ~ "CO",
str_detect(station_name, "FL") ~ "FL")) %>%
st_as_sf(coords = c("longitude", "latitude"),
crs = 4326, remove = FALSE) %>%
st_transform("+proj=utm +zone=42N +datum=WGS84 +units=km")
View(noaa)
unique(noaa$station_name)
pm25_read <- tibble()
for (file in grep("?.csv",
list.files(make_path(config$data_path$pm25),
pattern = "*2010.csv"),
value = T)) {
.tmp <- read_csv(make_path(config$data_path$pm25, file))
pm25_read <- pm25_read %>% rbind(.tmp)
}
pm25 <- pm25_read %>%
set_names(to_snake_case(colnames(.))) %>%
mutate(date = mdy(date)) %>%
st_as_sf(coords = c("site_longitude", "site_latitude"),
crs = 4326, remove = FALSE) %>%
st_transform("+proj=utm +zone=42N +datum=WGS84 +units=km") %>%
na.omit() %>%
mutate(state = case_when(state == "California" ~ "CA",
state == "Illinois" ~ "IL",
state == "Alaska" ~ "AK",
state == "Colorado" ~ "CO",
state == "Florida" ~ "FL")) %>%
select(date, site_name, daily_mean_pm_2_5_concentration, state)
pm25_sites <- distinct(pm25, site_name, state)
noaa_sites <- distinct(noaa, station_name, state)
min.col <- function(m, ...) max.col(-m, ...)
pm25_sites$row_num <- st_distance(pm25_sites, noaa_sites) %>% min.col(.)
sites <- noaa_sites %>%
mutate(row_num = row_number()) %>%
st_set_geometry(NULL) %>%
select(-state) %>%
right_join(., pm25_sites, by = "row_num") %>%
select(-c(row_num, geometry))
merged <- pm25 %>%
left_join(., sites, by = c("site_name", "state")) %>%
st_set_geometry(NULL) %>%
left_join(., noaa, by = c("station_name","date")) %>%
select(-c(geometry, state.y)) %>%
rename(state = state.x)
View(merged)
View(noaa)
merged[2]
merged[2,1]
merged[,1]
merged[GARDEN/TRINITY CHRISTIAN CHURCH]
unique(noaa$station_name)
unique(merged$station_name)
unique(noaa$station_name) = unique(merged$station_name)
n_s <- list(unique(noaa$station_name))
n_m <- list(unique(merged$station_name))
View(n_m)
n_m = n_s
n_m == n_s
n_s <- list(unique(noaa$station_name))
n_m <- list(unique(merged$station_name))
n_m == n_s
View(n_s)
View(n_m)
View(n_s)
unique(noaa$station_name)
unique(merged$station_name)
View(noaa_sites)
unique(noaa_sites)
unique(noaa_sites$station_name)
unique(noaa$station_name)
STATION <- "MONTEBELLO CA US"
check_noaa <- noaa %>%
filter(noaa$station_name == STATION)
View(check_noaa)
check_merged <- merged %>%
filter(merged$station_name == STATION)
View(check_merged)
View(check_noaa)
View(check_merged)
View(check_merged)
check_df <- c()
check_df$date <- check_merged$date
View(check_df)
VAR <- mtd_prcp_normal
VAR <- "mtd_prcp_normal"
check_df$var <- check_merged$VAR
check_df$var <- check_merged$mtd_prcp_normal
View(check_df)
check_df <- data.frame()
check_df$date <- check_merged$date
check_df$var <- check_merged$mtd_prcp_normal
View(check_df)
check_df$date <- check_merged$date
?left_join()
check <- left_join(check_noaa, check_merged, by = 'date')
View(check)
check.columns
check$columns
columns(check)
View(check)
check <- left_join(check_merged,check_noaa, by = 'date')
View(check)
check$names
colnames(check)
identical(check[["elevation.x"]],check[["elevation.y"]])
identical(check[["mtd_prcp_normal.x"]],check[["mtd_prcp_normal.y"]])
identical(check[["mtd_snow_normal.x"]],check[["mtd_snow_normal.y"]])
identical(check[["dly_tmin_normal.x"]],check[["dly_tmin_normal.y"]])
for (STATION in unique(merged$station_name)){
check_noaa <- noaa %>%
filter(noaa$station_name == STATION)
check_merged <- merged %>%
filter(merged$station_name == STATION)
check <- left_join(check_merged,check_noaa, by = 'date')
colnames(check)
identical(check[["mtd_prcp_normal.x"]],check[["mtd_prcp_normal.y"]])
identical(check[["mtd_snow_normal.x"]],check[["mtd_snow_normal.y"]])
identical(check[["mtd_snow_normal.x"]],check[["mtd_snow_normal.y"]])
identical(check[["ytd_prcp_normal.x"]],check[["ytd_prcp_normal.y"]])
identical(check[["ytd_snow_normal.x"]],check[["ytd_snow_normal.y"]])
identical(check[["dly_tmin_normal.x"]],check[["dly_tmin_normal.y"]])
}
View(check)
for (STATION in unique(merged$station_name)){
check_noaa <- noaa %>%
filter(noaa$station_name == STATION)
check_merged <- merged %>%
filter(merged$station_name == STATION)
check <- left_join(check_merged,check_noaa, by = 'date')
colnames(check)
print(identical(check[["mtd_prcp_normal.x"]],check[["mtd_prcp_normal.y"]]))
identical(check[["mtd_snow_normal.x"]],check[["mtd_snow_normal.y"]])
identical(check[["mtd_snow_normal.x"]],check[["mtd_snow_normal.y"]])
identical(check[["ytd_prcp_normal.x"]],check[["ytd_prcp_normal.y"]])
identical(check[["ytd_snow_normal.x"]],check[["ytd_snow_normal.y"]])
identical(check[["dly_tmin_normal.x"]],check[["dly_tmin_normal.y"]])
}
for (STATION in unique(merged$station_name)){
check_noaa <- noaa %>%
filter(noaa$station_name == STATION)
check_merged <- merged %>%
filter(merged$station_name == STATION)
check <- left_join(check_merged,check_noaa, by = 'date')
colnames(check)
print(identical(check[["mtd_prcp_normal.x"]],check[["mtd_prcp_normal.y"]]))
print(identical(check[["mtd_snow_normal.x"]],check[["mtd_snow_normal.y"]]))
print(identical(check[["mtd_snow_normal.x"]],check[["mtd_snow_normal.y"]]))
print(identical(check[["ytd_prcp_normal.x"]],check[["ytd_prcp_normal.y"]]))
print(identical(check[["ytd_snow_normal.x"]],check[["ytd_snow_normal.y"]]))
print(identical(check[["dly_tmin_normal.x"]],check[["dly_tmin_normal.y"]]))
}
}
bool <- c()
for (STATION in unique(merged$station_name)){
}
for (STATION in unique(merged$station_name)){
}
append(bool, identical(check[["mtd_prcp_normal.x"]],check[["mtd_prcp_normal.y"]])
print(identical(check[["mtd_snow_normal.x"]],check[["mtd_snow_normal.y"]]))
print(identical(check[["mtd_snow_normal.x"]],check[["mtd_snow_normal.y"]]))
print(identical(check[["ytd_prcp_normal.x"]],check[["ytd_prcp_normal.y"]]))
print(identical(check[["ytd_snow_normal.x"]],check[["ytd_snow_normal.y"]]))
print(identical(check[["dly_tmin_normal.x"]],check[["dly_tmin_normal.y"]]))
print(identical(check[["dly_tmin_normal.x"]],check[["dly_tmin_normal.y"]]))
print(identical(check[["dly_tmin_normal.x"]],check[["dly_tmin_normal.y"]]))
print(identical(check[["dly_tmin_normal.x"]],check[["dly_tmin_normal.y"]]))
}
check_df <- data.frame()
check_df$date <- check_merged$date
check_df$var <- check_merged$mtd_prcp_normal
columns(check)
#test
#http://www.sthda.com/english/wiki/visualize-correlation-matrix-using-correlogram
M<-cor(mtcars)
corrplot(M, method="circle")
corrplot(M, method="color")
str(M)
str(corr_tab)
}
append(bool, identical(check[["mtd_prcp_normal.x"]],check[["mtd_prcp_normal.y"]])
append(bool, 1)
bool <- append(bool, 1)
}
bool <- c()
for (STATION in unique(merged$station_name)){
}
for (STATION in unique(merged$station_name)){
check_noaa <- noaa %>%
filter(noaa$station_name == STATION)
check_merged <- merged %>%
filter(merged$station_name == STATION)
check <- left_join(check_merged,check_noaa, by = 'date')
colnames(check)
bool <- append(bool, identical(check[["mtd_prcp_normal.x"]],check[["mtd_prcp_normal.y"]])
}
print(identical(check[["mtd_snow_normal.x"]],check[["mtd_snow_normal.y"]]))
print(identical(check[["mtd_snow_normal.x"]],check[["mtd_snow_normal.y"]]))
print(identical(check[["ytd_prcp_normal.x"]],check[["ytd_prcp_normal.y"]]))
print(identical(check[["ytd_snow_normal.x"]],check[["ytd_snow_normal.y"]]))
print(identical(check[["dly_tmin_normal.x"]],check[["dly_tmin_normal.y"]]))
print(identical(check[["dly_tmin_normal.x"]],check[["dly_tmin_normal.y"]]))
print(identical(check[["dly_tmin_normal.x"]],check[["dly_tmin_normal.y"]]))
print(identical(check[["dly_tmin_normal.x"]],check[["dly_tmin_normal.y"]]))
}
check_df <- data.frame()
check_df$date <- check_merged$date
check_df$var <- check_merged$mtd_prcp_normal
columns(check)
#test
#http://www.sthda.com/english/wiki/visualize-correlation-matrix-using-correlogram
M<-cor(mtcars)
corrplot(M, method="circle")
corrplot(M, method="color")
str(M)
str(corr_tab)
?append()
for (STATION in unique(merged$station_name)){
check_noaa <- noaa %>%
filter(noaa$station_name == STATION)
check_merged <- merged %>%
filter(merged$station_name == STATION)
check <- left_join(check_merged,check_noaa, by = 'date')
colnames(check)
bool <- append(bool, identical(check[["mtd_prcp_normal.x"]],check[["mtd_prcp_normal.y"]]))
}
for (STATION in unique(merged$station_name)){
check_noaa <- noaa %>%
filter(noaa$station_name == STATION)
check_merged <- merged %>%
filter(merged$station_name == STATION)
check <- left_join(check_merged,check_noaa, by = 'date')
colnames(check)
bool <- append(bool, identical(check[["mtd_prcp_normal.x"]],check[["mtd_prcp_normal.y"]]))
bool <- append(identical(check[["mtd_snow_normal.x"]],check[["mtd_snow_normal.y"]]))
bool <- append(identical(check[["mtd_snow_normal.x"]],check[["mtd_snow_normal.y"]]))
bood <- append(identical(check[["ytd_prcp_normal.x"]],check[["ytd_prcp_normal.y"]]))
bool <- append(identical(check[["ytd_snow_normal.x"]],check[["ytd_snow_normal.y"]]))
bool <- append(identical(check[["dly_tmin_normal.x"]],check[["dly_tmin_normal.y"]]))
bool <- append(identical(check[["dly_tmin_normal.x"]],check[["dly_tmin_normal.y"]]))
bool <- append(identical(check[["dly_tmin_normal.x"]],check[["dly_tmin_normal.y"]]))
bool <- append(identical(check[["dly_tmin_normal.x"]],check[["dly_tmin_normal.y"]]))
}
for (STATION in unique(merged$station_name)){
check_noaa <- noaa %>%
filter(noaa$station_name == STATION)
check_merged <- merged %>%
filter(merged$station_name == STATION)
check <- left_join(check_merged,check_noaa, by = 'date')
colnames(check)
bool <- append(bool, identical(check[["mtd_prcp_normal.x"]],check[["mtd_prcp_normal.y"]]))
bool <- append(bool, identical(check[["mtd_snow_normal.x"]],check[["mtd_snow_normal.y"]]))
bool <- append(bool, identical(check[["mtd_snow_normal.x"]],check[["mtd_snow_normal.y"]]))
bood <- append(bool, identical(check[["ytd_prcp_normal.x"]],check[["ytd_prcp_normal.y"]]))
bool <- append(bool, identical(check[["ytd_snow_normal.x"]],check[["ytd_snow_normal.y"]]))
bool <- append(bool, identical(check[["dly_tmin_normal.x"]],check[["dly_tmin_normal.y"]]))
bool <- append(bool, identical(check[["dly_tmin_normal.x"]],check[["dly_tmin_normal.y"]]))
bool <- append(bool, identical(check[["dly_tmin_normal.x"]],check[["dly_tmin_normal.y"]]))
bool <- append(bool, identical(check[["dly_tmin_normal.x"]],check[["dly_tmin_normal.y"]]))
}
unique(bool)
))
check_noaa <- noaa %>%
filter(noaa$station_name == STATION)
check_merged <- merged %>%
filter(merged$station_name == STATION)
check <- left_join(check_merged,check_noaa, by = 'date')
colnames(check)
for (STATION in unique(merged$station_name)){
check_noaa <- noaa %>%
filter(noaa$station_name == STATION)
check_merged <- merged %>%
filter(merged$station_name == STATION)
check <- left_join(check_merged,check_noaa, by = 'date')
colnames(check)
bool <- append(bool, identical(check[["mtd_prcp_normal.x"]],check[["mtd_prcp_normal.y"]]))
bool <- append(bool, identical(check[["mtd_snow_normal.x"]],check[["mtd_snow_normal.y"]]))
bool <- append(bool, identical(check[["mtd_snow_normal.x"]],check[["mtd_snow_normal.y"]]))
bood <- append(bool, identical(check[["ytd_prcp_normal.x"]],check[["ytd_prcp_normal.y"]]))
bool <- append(bool, identical(check[["ytd_snow_normal.x"]],check[["ytd_snow_normal.y"]]))
bool <- append(bool, identical(check[["dly_tmin_normal.x"]],check[["dly_tmin_normal.y"]]))
bool <- append(bool, identical(check[["dly_tmin_normal.x"]],check[["dly_tmin_normal.y"]]))
bool <- append(bool, identical(check[["dly_tmin_normal.x"]],check[["dly_tmin_normal.y"]]))
bool <- append(bool, identical(check[["dly_tmin_normal.x"]],check[["dly_tmin_normal.y"]]))
bool <- append(bool, identical(check[["dly_dutr_normal.x"]],check[["dly_dutr_normal.y"]]))
bool <- append(bool, identical(check[["dly_tmax_normal.x"]],check[["dly_tmax_normal.y"]]))
}
unique(bool)
denver <- read.csv("Denver.csv")
denver%>%
missing_plot()
